From b8675030f2765511544533564238f91d607aa86f Mon Sep 17 00:00:00 2001
From: Claudio Mezzasalma <claudio.mezzasalma@eurotech.com>
Date: Fri, 9 Nov 2018 15:01:22 +0100
Subject: [PATCH 1/2] Stop Endpoint Info fallback if there are Endpoints
 specified in scope

Signed-off-by: Claudio Mezzasalma <claudio.mezzasalma@eurotech.com>
---
 .../endpoint/internal/EndpointInfoServiceImpl.java    | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java b/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
index b6c0ed26cc1..3e83f29eead 100644
--- a/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
+++ b/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
@@ -62,6 +62,8 @@
     private static final AuthorizationService AUTHORIZATION_SERVICE = LOCATOR.getService(AuthorizationService.class);
     private static final PermissionFactory PERMISSION_FACTORY = LOCATOR.getFactory(PermissionFactory.class);
 
+    private static final EndpointInfoFactory ENDPOINT_INFO_FACTORY = LOCATOR.getFactory(EndpointInfoFactory.class);
+
     public EndpointInfoServiceImpl() {
         super(EndpointInfoService.class.getName(), EndpointInfoDomains.ENDPOINT_INFO_DOMAIN, EndpointEntityManagerFactory.getInstance(), EndpointInfoService.class, EndpointInfoFactory.class);
     }
@@ -181,6 +183,15 @@ public EndpointInfoListResult query(KapuaQuery<EndpointInfo> query)
 
             if (endpointInfoListResult.isEmpty() && query.getScopeId() != null) {
 
+                // First check if there are any endpoint specified at all
+                EndpointInfoQuery totalQuery = ENDPOINT_INFO_FACTORY.newQuery(query.getScopeId());
+                long totalCount = EndpointInfoDAO.count(em, totalQuery);
+
+                if (totalCount != 0) {
+                    // if there are endpoints (even not matching the query), return the empty list
+                    return endpointInfoListResult;
+                }
+
                 KapuaId originalScopeId = query.getScopeId();
 
                 do {

From c2f35f6dd65c047eccef67b55bd9f022a45196f5 Mon Sep 17 00:00:00 2001
From: Claudio Mezzasalma <claudio.mezzasalma@eurotech.com>
Date: Mon, 12 Nov 2018 10:06:25 +0100
Subject: [PATCH 2/2] Added check also in count Also removed duplicated code

Signed-off-by: Claudio Mezzasalma <claudio.mezzasalma@eurotech.com>
---
 .../internal/EndpointInfoServiceImpl.java      | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java b/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
index 3e83f29eead..e306cee33c1 100644
--- a/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
+++ b/service/endpoint/internal/src/main/java/org/eclipse/kapua/service/endpoint/internal/EndpointInfoServiceImpl.java
@@ -15,6 +15,7 @@
 import org.eclipse.kapua.KapuaEntityUniquenessException;
 import org.eclipse.kapua.KapuaException;
 import org.eclipse.kapua.commons.configuration.AbstractKapuaConfigurableResourceLimitedService;
+import org.eclipse.kapua.commons.jpa.EntityManager;
 import org.eclipse.kapua.commons.model.query.predicate.AndPredicateImpl;
 import org.eclipse.kapua.commons.model.query.predicate.AttributePredicateImpl;
 import org.eclipse.kapua.commons.security.KapuaSecurityUtils;
@@ -184,10 +185,7 @@ public EndpointInfoListResult query(KapuaQuery<EndpointInfo> query)
             if (endpointInfoListResult.isEmpty() && query.getScopeId() != null) {
 
                 // First check if there are any endpoint specified at all
-                EndpointInfoQuery totalQuery = ENDPOINT_INFO_FACTORY.newQuery(query.getScopeId());
-                long totalCount = EndpointInfoDAO.count(em, totalQuery);
-
-                if (totalCount != 0) {
+                if (countAllEndpointsInScope(em, query.getScopeId())){
                     // if there are endpoints (even not matching the query), return the empty list
                     return endpointInfoListResult;
                 }
@@ -229,6 +227,12 @@ public long count(KapuaQuery<EndpointInfo> query)
 
             if (endpointInfoCount == 0 && query.getScopeId() != null) {
 
+                // First check if there are any endpoint specified at all
+                if (countAllEndpointsInScope(em, query.getScopeId())) {
+                    // if there are endpoints (even not matching the query), return 0
+                    return endpointInfoCount;
+                }
+
                 KapuaId originalScopeId = query.getScopeId();
 
                 do {
@@ -290,4 +294,10 @@ private void checkDuplicateEndpointInfo(KapuaId scopeId, KapuaId entityId, Strin
             throw new KapuaEntityUniquenessException(EndpointInfo.TYPE, uniquesFieldValues);
         }
     }
+
+    private boolean countAllEndpointsInScope(EntityManager em, KapuaId scopeId) throws KapuaException {
+        EndpointInfoQuery totalQuery = ENDPOINT_INFO_FACTORY.newQuery(scopeId);
+        long totalCount = EndpointInfoDAO.count(em, totalQuery);
+        return totalCount != 0;
+    }
 }
