From 45b790e01cdda97c39eaeec873f1d7af0986c9d1 Mon Sep 17 00:00:00 2001
From: Aleksandra Jovanovic <aleksandra.jovanovic@comtrade.com>
Date: Tue, 19 Feb 2019 12:18:49 +0100
Subject: [PATCH] Handled exception when adding/editing Users

Signed-off-by: Aleksandra Jovanovic <aleksandra.jovanovic@comtrade.com>
---
 .../user/client/dialog/UserAddDialog.java     | 55 ++++++++++---------
 1 file changed, 29 insertions(+), 26 deletions(-)

diff --git a/console/module/user/src/main/java/org/eclipse/kapua/app/console/module/user/client/dialog/UserAddDialog.java b/console/module/user/src/main/java/org/eclipse/kapua/app/console/module/user/client/dialog/UserAddDialog.java
index c51b624c6ab..ac461618172 100644
--- a/console/module/user/src/main/java/org/eclipse/kapua/app/console/module/user/client/dialog/UserAddDialog.java
+++ b/console/module/user/src/main/java/org/eclipse/kapua/app/console/module/user/client/dialog/UserAddDialog.java
@@ -68,6 +68,7 @@
     protected NumberField optlock;
 
     private String specificAccountId;
+    private Boolean passwordIsShown = false;
 
     private GwtUserServiceAsync gwtUserService = GWT.create(GwtUserService.class);
 
@@ -132,32 +133,34 @@ public void createBody() {
         username.setToolTip(USER_MSGS.dialogAddFieldNameTooltip());
         infoFieldSet.add(username, subFieldsetFormData);
 
+        password = new KapuaTextField<String>();
+        password.setAllowBlank(false);
+        password.setName("password");
+        password.setFieldLabel("* " + USER_MSGS.dialogAddFieldPassword());
+        password.setValidator(new PasswordFieldValidator(password));
+        password.setToolTip(USER_MSGS.dialogAddTooltipPassword());
+        password.setPassword(true);
+        password.setMaxLength(255);
+
+        confirmPassword = new KapuaTextField<String>();
+        confirmPassword.setAllowBlank(false);
+        confirmPassword.setName("confirmPassword");
+        confirmPassword.setFieldLabel("* " + USER_MSGS.dialogAddFieldConfirmPassword());
+        confirmPassword.setValidator(new ConfirmPasswordFieldValidator(confirmPassword, password));
+        confirmPassword.setToolTip(USER_MSGS.dialogAddTooltipPassword());
+        confirmPassword.setPassword(true);
+        confirmPassword.setMaxLength(255);
+
+        passwordTooltip = new LabelField();
+        passwordTooltip.setValue(USER_MSGS.dialogAddTooltipPassword());
+        passwordTooltip.setStyleAttribute("margin-top", "-5px");
+        passwordTooltip.setStyleAttribute("color", "gray");
+        passwordTooltip.setStyleAttribute("font-size", "10px");
+
         if (currentSession.hasPermission(CredentialSessionPermission.write())) {
-            password = new KapuaTextField<String>();
-            password.setAllowBlank(false);
-            password.setName("password");
-            password.setFieldLabel("* " + USER_MSGS.dialogAddFieldPassword());
-            password.setValidator(new PasswordFieldValidator(password));
-            password.setToolTip(USER_MSGS.dialogAddTooltipPassword());
-            password.setPassword(true);
-            password.setMaxLength(255);
+            passwordIsShown = true;
             infoFieldSet.add(password, subFieldsetFormData);
-
-            confirmPassword = new KapuaTextField<String>();
-            confirmPassword.setAllowBlank(false);
-            confirmPassword.setName("confirmPassword");
-            confirmPassword.setFieldLabel("* " + USER_MSGS.dialogAddFieldConfirmPassword());
-            confirmPassword.setValidator(new ConfirmPasswordFieldValidator(confirmPassword, password));
-            confirmPassword.setToolTip(USER_MSGS.dialogAddTooltipPassword());
-            confirmPassword.setPassword(true);
-            confirmPassword.setMaxLength(255);
             infoFieldSet.add(confirmPassword, subFieldsetFormData);
-
-            passwordTooltip = new LabelField();
-            passwordTooltip.setValue(USER_MSGS.dialogAddTooltipPassword());
-            passwordTooltip.setStyleAttribute("margin-top", "-5px");
-            passwordTooltip.setStyleAttribute("color", "gray");
-            passwordTooltip.setStyleAttribute("font-size", "10px");
             infoFieldSet.add(passwordTooltip);
         }
         displayName = new KapuaTextField<String>();
@@ -230,11 +233,11 @@ public void handleEvent(BaseEvent be) {
     }
 
     public void validateUser() {
-        if (username.getValue() == null || (password.getValue() == null && password.isVisible()) || (confirmPassword.getValue() == null && confirmPassword.isVisible())) {
+        if (username.getValue() == null || (passwordIsShown && password.getValue() == null) || (passwordIsShown && confirmPassword.getValue() == null)) {
             ConsoleInfo.display("Error", CMSGS.allFieldsRequired());
-        } else if (!password.isValid()) {
+        } else if (passwordIsShown && !password.isValid()) {
             ConsoleInfo.display("Error", password.getErrorMessage());
-        } else if ((password.isVisible() && confirmPassword.isVisible()) && !password.getValue().equals(confirmPassword.getValue())) {
+        } else if (passwordIsShown && !password.getValue().equals(confirmPassword.getValue())) {
             ConsoleInfo.display("Error", confirmPassword.getErrorMessage());
         } else if (!email.isValid()) {
             ConsoleInfo.display("Error", email.getErrorMessage());
